<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.everygamer.dao.StoreDao">
    <resultMap id="BaseItem" type="com.everygamer.bean.BaseItem">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="itemType" column="item_type"/>
        <result property="manufactor" column="manufactor"/>
        <result property="model" column="model"/>
        <result property="count" column="count"/>
        <result property="remain" column="remain"/>
        <result property="price" column="price"/>
        <result property="exData" column="ex_data"/>
        <result property="desc" column="desc"/>
        <result property="isAlive" column="is_alive"/>
        <result property="insDate" column="ins_date"/>
        <result property="delDate" column="del_date"/>
        <result property="upDate" column="up_date"/>
    </resultMap>

    <select id="searchStore" resultType="com.everygamer.bean.BaseItem" resultMap="BaseItem">
        SELECT
        statis.id,
        statis.name,
        item_type.name AS item_type,
        manu.name AS manufactor,
        <choose>
            <when test="exData==null">
                SUM(statis.count) AS "count",
                SUM(statis.price) AS price,
                statis.up_date
                FROM item_list_statis AS statis, item_type, manufactor AS manu
                WHERE statis.item_type = item_type.id AND statis.manufactor = manu.id
                <if test="type!=null">
                    AND statis.item_type=#{type}
                </if>
                <if test="kw!=null">
                    AND statis.name LIKE #{kw}
                </if>
                <if test="manu!=null">
                    AND statis.manufactor=#{manu}
                </if>
                GROUP BY statis.name, statis.manufactor, item_type.name, manu.name, statis.up_date, statis.id
                ORDER BY statis.up_date DESC,statis.id
            </when>
            <otherwise>
                statis.count,
                statis.price,
                statis.ex_data,
                statis.up_date
                FROM item_list_statis AS statis, item_type, manufactor AS manu
                WHERE statis.item_type = item_type.id AND statis.manufactor = manu.id AND statis.item_type=#{type}
                <if test="kw!=null">
                    AND statis.name ILIKE #{kw}
                </if>
                <if test="manu!=null">
                    AND statis.manufactor=#{manu}
                </if>
                AND statis.ex_data @>#{exData}::jsonb
                ORDER BY statis.up_date DESC,statis.id
            </otherwise>
        </choose>
    </select>
    <select id="listStore" resultType="com.everygamer.bean.BaseItem" resultMap="BaseItem">
        SELECT
        item.id,
        item.name,
        item_type.name AS item_type,
        manu.name AS manufactor,
        item.count,
        item.remain,
        item.price,
        item.ex_data,
        item.desc,
        item.ins_date
        FROM item_list AS item, item_type, manufactor AS manu
        WHERE item.item_type=item_type.id AND item.manufactor=manu.id
        <if test="type!=null">
            AND item.item_type=#{type}
        </if>
        <if test="kw!=null">
            AND item.name ILIKE #{kw}
        </if>
        <if test="manu!=null">
            AND manu.name=#{manu}
        </if>
        <if test="exData!=null">
            AND item.ex_data @> #{exData}::JSONB
        </if>
        <choose>
            <when test="startTime!=null and endTime!=null">
                AND item.ins_date BETWEEN #{startTime} AND #{endTime}
            </when>
            <otherwise>
                <choose>
                    <when test="startTime!=null">
                        AND item.ins_date &gt;= #{startTime}
                    </when>
                    <otherwise>
                        <choose>
                            <when test="endTime!=null">
                                AND item.ins_date &lt;= #{endTime}
                            </when>
                        </choose>
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
        ORDER BY item.ins_date DESC
    </select>
    <select id="getTopStore" resultType="com.everygamer.bean.BaseItem" resultMap="BaseItem">
        SELECT
            statis.name,
            "item_type".name,
            "manu".name,
            statis.count,
            statis.ex_data
        FROM item_list_statis AS statis, item_type, manufactor AS manu
        WHERE statis.item_type = #{param1} AND statis.item_type = item_type.id AND statis.manufactor = manu.id AND
              item_type.in_index = 1
        ORDER BY statis.count DESC
        LIMIT #{param2};
    </select>
    <select id="listName" resultType="java.lang.String">
        SELECT
        DISTINCT item.name
        FROM item_list_statis AS item
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="type!=null">
                AND item.item_type=#{type}
            </if>
            <if test="name!=null">
                AND item.name ILIKE #{name}
            </if>
            <if test="exData!=null">
                AND item.ex_data @> #{exData}::jsonb
            </if>
        </trim>
        ORDER BY item.name LIMIT 5
    </select>
    <select id="listModel" resultType="java.lang.String">
        SELECT
        DISTINCT item.model
        FROM item_list_statis AS item
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="type!=null">
                AND item.item_type=#{type}
            </if>
            <if test="model!=null">
                AND item.model ILIKE #{model}
            </if>
            <if test="exData!=null">
                AND item.ex_data @> #{exData}::jsonb
            </if>
        </trim>
        ORDER BY item.model LIMIT 5
    </select>
    <select id="listItemOut" resultType="com.everygamer.bean.BaseItem" resultMap="BaseItem">
        SELECT iout_data.id,item_out.order_id,array_to_json(array_agg(row_to_json(iout_data))) AS
        ex_data,item_out.desc,iout_data.ins_date
        FROM(SELECT
        iout.id,iout.count,iout.price,iout.ins_date,
        item.name,item_type.name AS item_type,manu.name AS manufactor,item.model,item.ex_data,item,item_type.ex_data AS
        ex_data_str
        FROM(SELECT
        iout.id,iout.ins_date,
        jsonb_array_elements(iout.item_list) -> 'statisId' AS static_id,
        jsonb_array_elements(iout.item_list) -> 'count' AS "count",
        jsonb_array_elements(iout.item_list) -> 'price' AS price
        FROM item_out AS iout) AS iout,item_list_statis AS item,item_type,manufactor AS manu
        WHERE iout.static_id = to_char(item.id, '99999')::JSONB AND item.item_type=item_type.id AND
        item.manufactor=manu.id
        <if test="type!=null">
            AND item.item_type=#{type}
        </if>
        <if test="kw!=null">
            AND item.name ILIKE #{kw}
        </if>
        <if test="manu!=null">
            AND manu.name=#{manu}
        </if>
        <if test="exData!=null">
            AND item.ex_data @> #{exData}::JSONB
        </if>
        ORDER BY iout.ins_date DESC
        )AS iout_data,item_out
        WHERE iout_data.id=item_out.id
        <choose>
            <when test="startTime!=null and endTime!=null">
                AND iout_data.ins_date BETWEEN #{startTime} AND #{endTime}
            </when>
            <otherwise>
                <choose>
                    <when test="startTime!=null">
                        AND iout_data.ins_date &gt;= #{startTime}
                    </when>
                    <otherwise>
                        <choose>
                            <when test="endTime!=null">
                                AND iout_data.ins_date &lt;= #{endTime}
                            </when>
                        </choose>
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
        GROUP BY iout_data.id,item_out.order_id,item_out.desc,iout_data.ins_date
    </select>
</mapper>
